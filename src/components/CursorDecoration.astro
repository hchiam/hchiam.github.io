<div id="cursor-shadow">
  <div>A</div>
  <div>㆗</div>
  <div>é</div>
</div>

<script>
  import { setCSSVariable } from "../helpers/css-variable";
  import { isUsingTouchScreen } from "../helpers/is-using-touchscreen.ts";
  import { prefersReducedMotion } from "../helpers/prefers-reduced-motion.ts";

  const scale = 100;
  const delayBeforeShowOrbits = 4000;
  let delayTimer = null;
  let cursorLeft = -scale;
  let cursorTop = -scale;

  const cursorShadow = document.querySelector("#cursor-shadow");
  document.addEventListener("mousemove", function (e) {
    cursorLeft = e.clientX;
    cursorTop = e.clientY;
    setCSSVariable("--left", cursorLeft + "px", cursorShadow);
    setCSSVariable("--top", cursorTop + "px", cursorShadow);
    fadeOrbits();
    setTimeout(() => {
      unfadeOrbits();
    }, 1000);
  });

  delayShowingOrbits();

  function delayShowingOrbits() {
    hideOrbits();

    if (!prefersReducedMotion() && !isUsingTouchScreen()) {
      clearTimeout(delayTimer);
      delayTimer = setTimeout(() => {
        showOrbits();
      }, delayBeforeShowOrbits);
    } else {
      cursorShadow.querySelectorAll("*").forEach((e) => e.remove());
    }
  }

  function hideOrbits() {
    cursorShadow.classList.remove("show-orbits");
  }

  function showOrbits() {
    cursorShadow.classList.add("show-orbits");
  }

  function fadeOrbits() {
    cursorShadow.classList.add("fade-orbits");
  }

  function unfadeOrbits() {
    cursorShadow.classList.remove("fade-orbits");
  }
</script>

<style lang="scss">
  #cursor-shadow {
    position: fixed;
    box-shadow: 0 0 50px 50px rgba(0, 0, 0, 0.2);
    left: var(--left, -100vw);
    top: var(--top, -100vh);
    transition: 0s;
    &,
    * {
      pointer-events: none;
    }
    & * {
      font-size: 1.25rem;
      background: transparent;
      color: white;
      --text-outline-colour: black;
      text-shadow: -1px -1px var(--text-outline-colour),
        0px -1px var(--text-outline-colour), 1px -1px var(--text-outline-colour),
        -1px 0px var(--text-outline-colour), 1px 0px var(--text-outline-colour),
        -1px 1px var(--text-outline-colour), 0px 1px var(--text-outline-colour),
        1px 1px var(--text-outline-colour);
    }
    &:not(.show-orbits) * {
      display: none;
    }
    &.show-orbits * {
      position: fixed;
      border-radius: 50%;
      width: 1.25rem;
      height: 1.25rem;
      @media (prefers-reduced-motion: no-preference) {
        display: flex;
        justify-content: center;
        align-items: center;
      }
    }
    &.fade-orbits * {
      opacity: 0.25;
    }
    &:not(.show-orbits) * {
      display: none;
    }
  }
  #cursor-shadow {
    --speed: 3s;
    perspective: 400px;
    transform-style: preserve-3d;
    transform: rotateX(50deg);
    width: 0;
    height: 0;
  }
  #cursor-shadow *:first-child {
    --r1: -45deg;
    --t: 50px;
    --r2: -0.1turn;
    transform: rotateX(var(--r1)) rotateZ(0deg) translateX(var(--t))
      rotateX(var(--r2));
    animation: rotate1 var(--speed) infinite linear both;
  }
  #cursor-shadow *:nth-child(2) {
    --r1: 10deg;
    --t: -60px;
    --r2: -0.1turn;
    transform: rotateX(var(--r1)) rotateZ(0deg) translateX(var(--t))
      rotateX(var(--r2));
    animation: rotate2 var(--speed) infinite linear both;
  }
  #cursor-shadow *:nth-child(3) {
    --r1: -10deg;
    --t: 70px;
    --r2: -0.1turn;
    transform: rotateX(var(--r1)) rotateZ(0deg) translateX(var(--t))
      rotateX(var(--r2));
    animation: rotate3 var(--speed) infinite linear both;
  }
  @keyframes rotate1 {
    100% {
      transform: rotateX(var(--r1)) rotateZ(360deg) translateX(var(--t))
        rotateX(var(--r2));
    }
  }
  @keyframes rotate2 {
    100% {
      transform: rotateX(var(--r1)) rotateZ(360deg) translateX(var(--t))
        rotateX(var(--r2));
    }
  }
  @keyframes rotate3 {
    100% {
      transform: rotateX(var(--r1)) rotateZ(-360deg) translateX(var(--t))
        rotateX(var(--r2));
    }
  }
</style>
