---
export interface Props {
  href: string;
  alt: string;
  src: string;
  width?: number;
  height?: number;
  target?: string;
  aStyle?: string;
  imgStyle?: string;
  extraButton?: boolean;
}
const {
  href,
  alt,
  src,
  width,
  height,
  target = "_blank",
  aStyle,
  imgStyle,
  extraButton = true,
} = Astro.props;
---

<a href={href} target={target} style={aStyle} rel="noopener noreferrer">
  <img
    client:visible
    alt={alt}
    src={src}
    width={width}
    height={height}
    style={imgStyle}
  />
</a>
{extraButton ? <button data-href={href}>VIEW</button> : ""}

<script>
  function handleClick(href) {
    document.querySelector(`a[href="${href}"]`).click();
  }
  [...document.querySelectorAll("button[data-href]")].forEach((b) =>
    b.addEventListener("click", function (e) {
      const href = e.target.getAttribute("data-href");
      handleClick(href);
    })
  );
</script>

<style lang="scss">
  @import "../styles/focus-style";

  a {
    background: transparent;
    padding: 0;
    width: fit-content;
    margin: auto;
    display: flex;

    &:after {
      display: none;
    }

    &:hover,
    &:focus {
      img {
        background: var(--my-gradient);
      }
    }
  }

  img {
    margin: auto;
    object-fit: cover;
    background: white;
    display: inline;

    @include focus-style;
  }

  button {
    margin-top: var(--size-2);
    margin-bottom: var(--size-3);
    background: var(--my-gradient);
    color: black;

    @include focus-style;

    &:hover,
    &:focus {
      background: black;
      color: var(--accent-colour);
    }
  }

  button:hover {
    cursor: pointer;
  }
</style>
